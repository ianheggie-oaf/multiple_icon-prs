---
http_interactions:
- request:
    method: get
    uri: https://datracker.penrithcity.nsw.gov.au/track/Pages/XC.Track/SearchApplication.aspx
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.7 Ruby/2.5.1p57 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - datracker.penrithcity.nsw.gov.au
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Type:
      - text/html; charset=utf-8
      Set-Cookie:
      - ASP.NET_SessionId=ngkigqfjkubryvlodwwpurvv; path=/; HttpOnly; SameSite=Lax
      X-Ua-Compatible:
      - IE=8
      X-Frame-Options:
      - SAMEORIGIN
      Date:
      - Thu, 14 Jul 2022 01:47:30 GMT
      Content-Length:
      - '24515'
    body:
      encoding: UTF-8
      string: "\r\n\r\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"
        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<head
        id=\"ctl00_Head1\"><title>\r\n\tFind an Application\r\n</title><meta http-equiv=\"Expires\"
        content=\"0\" /><meta http-equiv=\"Cache-Control\" content=\"no-cache\" /><meta
        http-equiv=\"Pragma\" content=\"no-cache\" /><link href=\"../../favicon.ico\"
        type=\"image/x-icon\" rel=\"icon\" /><link href=\"../../favicon.ico\" type=\"image/x-icon\"
        rel=\"shortcut icon\" /><link href=\"../../HttpCombiner.ashx?s=IconCss&amp;t=text/css&amp;v=1.92\"
        type=\"text/css\" rel=\"Stylesheet\" media=\"all\" /><link title=\"ICON XChange\"
        rel=\"Search\" type=\"application/opensearchdescription+xml\" href=\"http://xchange.iconsoftware.com.au/Pages/XC.Track/search.xml\"
        /><link rel=\"alternate\" type=\"application/rss+xml\" href=\"http://xchange.iconsoftware.com.au/Pages/XC.Track/SearchApplication.aspx?o=rss\"
        />\r\n\t<!--[if lt IE 7]> <style type=\"text/css\">@import \"App_Themes/ie6.css\";</style><![endif]-->\r\n\t<style
        type='text/css'></style><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"
        /><link href=\"../../App_Themes/Default/CertificateStyles.css\" type=\"text/css\"
        rel=\"stylesheet\" /><link href=\"../../App_Themes/Default/Default.css\" type=\"text/css\"
        rel=\"stylesheet\" /><link href=\"../../App_Themes/Default/User.css\" type=\"text/css\"
        rel=\"stylesheet\" /><link href=\"/track/Telerik.Web.UI.WebResource.axd?d=najFJNr40iH6v0aitXEyMedEuuJSTi1uRrNymcnwpGVOcfaiU291W729-NSYKqQ2z5Myy1jTTNd7bMCuyY6xgEifJBIHFNaFwb7cpeuvW5PhpfwHunTeGHLU7sk6uEsRWM1tfk7jdA0c3C4ddh8QEw2&amp;t=637772534875938957&amp;compress=1&amp;_TSM_CombinedScripts_=%3b%3bTelerik.Web.UI%2c+Version%3d2021.2.511.40%2c+Culture%3dneutral%2c+PublicKeyToken%3d121fae78165ba3d4%3aen%3a495692de-a00b-4c49-bd24-ba26e736c57e%3aed2942d4%3a53e1db5a%3bTelerik.Web.UI.Skins%2c+Version%3d2021.2.511.40%2c+Culture%3dneutral%2c+PublicKeyToken%3d121fae78165ba3d4%3aen%3a74cc62f7-b6ac-48a5-97df-04d6b0ba4852%3a17af17ec%3a40a387cd\"
        type=\"text/css\" rel=\"stylesheet\" /></head>\r\n<body>\r\n    <form method=\"post\"
        action=\"./SearchApplication.aspx\" id=\"aspnetForm\" autocomplete=\"off\">\r\n<input
        type=\"hidden\" name=\"ctl00_rcss_TSSM\" id=\"ctl00_rcss_TSSM\" value=\"\"
        />\r\n<input type=\"hidden\" name=\"ctl00_script_TSM\" id=\"ctl00_script_TSM\"
        value=\"\" />\r\n<input type=\"hidden\" name=\"__VIEWSTATE\" id=\"__VIEWSTATE\"
        value=\"/wEPDwULLTE1OTM3MDQ5NjUPZBYCZg9kFgICAw9kFgwCAg8UKwACFCsAAg8WCB4JR3JvdXBGbG93CylwVGVsZXJpay5XZWIuVUkuSXRlbUZsb3csIFRlbGVyaWsuV2ViLlVJLCBWZXJzaW9uPTIwMjEuMi41MTEuNDAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49MTIxZmFlNzgxNjViYTNkNAEeFUVuYWJsZUVtYmVkZGVkU2NyaXB0c2ceHEVuYWJsZUVtYmVkZGVkQmFzZVN0eWxlc2hlZXRnHhJSZXNvbHZlZFJlbmRlck1vZGULKXJUZWxlcmlrLldlYi5VSS5SZW5kZXJNb2RlLCBUZWxlcmlrLldlYi5VSSwgVmVyc2lvbj0yMDIxLjIuNTExLjQwLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTEyMWZhZTc4MTY1YmEzZDQBZA8UKwAFFCsAAg8WDB4EVGV4dAUESG9tZR4LSXNTZXBhcmF0b3JoHghJbWFnZVVybAUnfi9Db21tb24vQ29tbW9uL0ltYWdlLmFzcHg/cmlkPWhvbWUucG5nHgtOYXZpZ2F0ZVVybAUcfi9QYWdlcy94Yy5Ib21lL0RlZmF1bHQuYXNweB4FV2lkdGgbAAAAAADAXEABAAAAHgRfIVNCAoACZGQUKwACDxYMHwQFCFBsYW5uaW5nHwVoHwYFLn4vQ29tbW9uL0NvbW1vbi9JbWFnZS5hc3B4P3JpZD1tYXBfbWFnbmlmeS5wbmcfBwUcfi9QYWdlcy9YQy5QbGFuL0RlZmF1bHQuYXNweB8IGwAAAAAAwFxAAQAAAB8JAoACZGQUKwACDxYMHwQFC0RldmVsb3BtZW50HwVoHwYFK34vQ29tbW9uL0NvbW1vbi9JbWFnZS5hc3B4P3JpZD1wYWdlX2tleS5wbmcfBwUdfi9QYWdlcy9YQy5UcmFjay9EZWZhdWx0LmFzcHgfCBsAAAAAAMBcQAEAAAAfCQKAAmRkFCsAAg8WDB8EBQpNeSBDb3VuY2lsHwVoHwYFKn4vQ29tbW9uL0NvbW1vbi9JbWFnZS5hc3B4P3JpZD11c2VyLTE2LnBuZx8HBRx+L1BhZ2VzL3hjLlBvcnRhbC9JbmRleC5hc3B4HwgbAAAAAADAXEABAAAAHwkCgAJkZBQrAAIPFgwfBAUHUmVwb3J0cx8FaB8GBTF+L0NvbW1vbi9Db21tb24vSW1hZ2UuYXNweD9yaWQ9dGFibGVfbXVsdGlwbGUucG5nHwcFHH4vUGFnZXMveGMuUmVwb3J0L0luZGV4LmFzcHgfCBsAAAAAAMBcQAEAAAAfCQKAAmRkDxQrAQVmZmZmZhYBBXNUZWxlcmlrLldlYi5VSS5SYWRNZW51SXRlbSwgVGVsZXJpay5XZWIuVUksIFZlcnNpb249MjAyMS4yLjUxMS40MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj0xMjFmYWU3ODE2NWJhM2Q0ZBYKZg8PFgwfBAUESG9tZR8FaB8GBSd+L0NvbW1vbi9Db21tb24vSW1hZ2UuYXNweD9yaWQ9aG9tZS5wbmcfBwUcfi9QYWdlcy94Yy5Ib21lL0RlZmF1bHQuYXNweB8IGwAAAAAAwFxAAQAAAB8JAoACZGQCAQ8PFgwfBAUIUGxhbm5pbmcfBWgfBgUufi9Db21tb24vQ29tbW9uL0ltYWdlLmFzcHg/cmlkPW1hcF9tYWduaWZ5LnBuZx8HBRx+L1BhZ2VzL1hDLlBsYW4vRGVmYXVsdC5hc3B4HwgbAAAAAADAXEABAAAAHwkCgAJkZAICDw8WDB8EBQtEZXZlbG9wbWVudB8FaB8GBSt+L0NvbW1vbi9Db21tb24vSW1hZ2UuYXNweD9yaWQ9cGFnZV9rZXkucG5nHwcFHX4vUGFnZXMvWEMuVHJhY2svRGVmYXVsdC5hc3B4HwgbAAAAAADAXEABAAAAHwkCgAJkZAIDDw8WDB8EBQpNeSBDb3VuY2lsHwVoHwYFKn4vQ29tbW9uL0NvbW1vbi9JbWFnZS5hc3B4P3JpZD11c2VyLTE2LnBuZx8HBRx+L1BhZ2VzL3hjLlBvcnRhbC9JbmRleC5hc3B4HwgbAAAAAADAXEABAAAAHwkCgAJkZAIEDw8WDB8EBQdSZXBvcnRzHwVoHwYFMX4vQ29tbW9uL0NvbW1vbi9JbWFnZS5hc3B4P3JpZD10YWJsZV9tdWx0aXBsZS5wbmcfBwUcfi9QYWdlcy94Yy5SZXBvcnQvSW5kZXguYXNweB8IGwAAAAAAwFxAAQAAAB8JAoACZGQCBA9kFgICAQ9kFgICAg8WAh8EZWQCBQ8WAh8EBfkBWW91IGFyZSBoZXJlOiA8YSBocmVmPSJodHRwOi8vZGF0cmFja2VyLnBlbnJpdGhjaXR5Lm5zdy5nb3YuYXUvdHJhY2siPkhvbWU8L2E+ICYjMTg3OyA8YSBocmVmPSIuLi8uLi9wYWdlcy94Yy50cmFjay9kZWZhdWx0LmFzcHgiIGNsYXNzPSJicmVhZGNydW1iIj5EZXZlbG9wbWVudDwvYT4gJiMxODc7IDxhIGhyZWY9Ii4uLy4uL1BhZ2VzL1hDLlRyYWNrL1NlYXJjaEFwcGxpY2F0aW9uLmFzcHgiPkZpbmQgYW4gQXBwbGljYXRpb248L2E+ZAIHD2QWAmYPZBYCAgEPZBYEAgEPZBYCAgEPDxYCHgdWaXNpYmxlZ2QWBmYPZBYCAgEPDxYEHwgbAAAAAAAwgUABAAAAHwkCgAJkZAIBDxYCHwRlZAICD2QWAmYPDxYEHghDc3NDbGFzc2UfCQICZBYEAgEPDxYCHwpoZBYCAgMPDxYCHwRlZGQCAw8PFgQfC2UfCQICZBYEAgMPZBYCZg8WAh8EBfcHPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iaHR0cDovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2FwaS9qcz9zZW5zb3I9dHJ1ZSZsaWJyYXJpZXM9Z2VvbWV0cnkiPjwvc2NyaXB0PjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vanNhcGkiPjwvc2NyaXB0PjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9jbGllbnQvc2NyaXB0cy9tYXAvL2ljb24tbWFwLmpzIj48L3NjcmlwdD48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIuLi8uLi9QYWdlcy9YQy5TcGF0aWFsL0phdmFzY3JpcHQvU3BhdGlhbC5qcyI+PC9zY3JpcHQ+PGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIvY2xpZW50L3NjcmlwdHMvbWFwLy9pY29uLW1hcC5jc3MiIG1lZGlhPSJzY3JlZW4iPjwvbGluaz48bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii4uLy4uL0FwcF9UaGVtZXMvSWNvbi9TcGF0aWFsLmNzcyIgbWVkaWE9InNjcmVlbiI+PC9saW5rPjxkaXYgaWQ9Im1hcCIgY2xhc3M9ImVtYmVkZGVkIiBzdHlsZT0iIj4gPC9kaXY+DQo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+DQp2YXIgbWFwOyQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHt2YXIgb3B0aW9ucyA9IHthY2NvdW50OiIiLGNvbnRleHQ6IiIsem9vbVRvQm91bmRzOiBmYWxzZSx0b29sYmFyOiB0cnVlLHRvb2xiYXJPcHRpb25zOiB7em9vbUluOiB0cnVlLHpvb21PdXQ6IHRydWUsc3RyZWV0VmlldzogdHJ1ZSxsYXllcnM6IGZhbHNlLGxlZ2VuZDogZmFsc2UsY2xlYXI6IGZhbHNlLHNlYXJjaDogZmFsc2V9LGlkZW50aWZ5OiBmYWxzZSxtdWx0aVNlbGVjdDogZmFsc2Usem9vbUZhY3RvcjogMTZ9Ow0KbWFwID0gbmV3IG1hY3JvZ2lzLm1hcHMuSWNvbk1hcCgibWFwIiwgb3B0aW9ucywgZnVuY3Rpb24oKSB7IG1hcC56b29tVG9GdWxsRXh0ZW50KCk7DQogDQp9KTt9KTsNCiQoJyMnKS5oaWRlKCk7DQo8L3NjcmlwdD4NCmQCBQ8WAh8EZWQCAw9kFgICAQ9kFgICAQ9kFgICFQ9kFgJmD2QWBAIBD2QWBAIBDw8WAh8KaGRkAgMPDxYCHwQFA01hcGRkAgMPZBYEAgMPZBYCZg8WAh8EBfcHPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iaHR0cDovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2FwaS9qcz9zZW5zb3I9dHJ1ZSZsaWJyYXJpZXM9Z2VvbWV0cnkiPjwvc2NyaXB0PjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vanNhcGkiPjwvc2NyaXB0PjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9jbGllbnQvc2NyaXB0cy9tYXAvL2ljb24tbWFwLmpzIj48L3NjcmlwdD48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIuLi8uLi9QYWdlcy9YQy5TcGF0aWFsL0phdmFzY3JpcHQvU3BhdGlhbC5qcyI+PC9zY3JpcHQ+PGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIvY2xpZW50L3NjcmlwdHMvbWFwLy9pY29uLW1hcC5jc3MiIG1lZGlhPSJzY3JlZW4iPjwvbGluaz48bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii4uLy4uL0FwcF9UaGVtZXMvSWNvbi9TcGF0aWFsLmNzcyIgbWVkaWE9InNjcmVlbiI+PC9saW5rPjxkaXYgaWQ9Im1hcCIgY2xhc3M9ImVtYmVkZGVkIiBzdHlsZT0iIj4gPC9kaXY+DQo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+DQp2YXIgbWFwOyQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHt2YXIgb3B0aW9ucyA9IHthY2NvdW50OiIiLGNvbnRleHQ6IiIsem9vbVRvQm91bmRzOiBmYWxzZSx0b29sYmFyOiB0cnVlLHRvb2xiYXJPcHRpb25zOiB7em9vbUluOiB0cnVlLHpvb21PdXQ6IHRydWUsc3RyZWV0VmlldzogdHJ1ZSxsYXllcnM6IGZhbHNlLGxlZ2VuZDogZmFsc2UsY2xlYXI6IGZhbHNlLHNlYXJjaDogZmFsc2V9LGlkZW50aWZ5OiBmYWxzZSxtdWx0aVNlbGVjdDogZmFsc2Usem9vbUZhY3RvcjogMTZ9Ow0KbWFwID0gbmV3IG1hY3JvZ2lzLm1hcHMuSWNvbk1hcCgibWFwIiwgb3B0aW9ucywgZnVuY3Rpb24oKSB7IG1hcC56b29tVG9GdWxsRXh0ZW50KCk7DQogDQp9KTt9KTsNCiQoJyMnKS5oaWRlKCk7DQo8L3NjcmlwdD4NCmQCBQ8WAh8EZWQCCg9kFgICAQ8PFgYfAmcfAWcfAwsrBQFkZAIMD2QWAgICDw8WBh8BZx8CZx8DCysFAWRkGAEFHl9fQ29udHJvbHNSZXF1aXJlUG9zdEJhY2tLZXlfXxYDBQljdGwwMCR0YWIFFWN0bDAwJGhlbHAkRmx5b3V0SGVscAUTY3RsMDAkU2hvd0ljb24zJGZseS799Bg1lROwjNhrNX5qmadqpnOc7m6zVs3KF2IftZUE\"
        />\r\n\r\n\r\n<script src=\"/track/Telerik.Web.UI.WebResource.axd?_TSM_HiddenField_=ctl00_script_TSM&amp;compress=1&amp;_TSM_CombinedScripts_=%3b%3bSystem.Web.Extensions%2c+Version%3d4.0.0.0%2c+Culture%3dneutral%2c+PublicKeyToken%3d31bf3856ad364e35%3aen%3a4ff39ab4-86bc-4f97-a397-bc04a8fc5f51%3aea597d4b%3bTelerik.Web.UI%2c+Version%3d2021.2.511.40%2c+Culture%3dneutral%2c+PublicKeyToken%3d121fae78165ba3d4%3aen%3a495692de-a00b-4c49-bd24-ba26e736c57e%3a16e4e7cd%3a33715776%3af7645509%3a24ee1bba%3ae330518b%3a2003d0b8%3ac128760b%3a88144a7a%3a1e771326%3ac8618e41%3a1a73651d%3a333f8d94%3a874f8ea2%3a19620875%3af46195d3%3acda80b3\"
        type=\"text/javascript\"></script>\r\n<script type=\"text/javascript\">\r\n//<![CDATA[\r\nif
        (typeof(Sys) === 'undefined') throw new Error('ASP.NET Ajax client-side framework
        failed to load.');\r\n//]]>\r\n</script>\r\n\r\n<input type=\"hidden\" name=\"__VIEWSTATEGENERATOR\"
        id=\"__VIEWSTATEGENERATOR\" value=\"5EDE6B9F\" />\r\n<input type=\"hidden\"
        name=\"__EVENTVALIDATION\" id=\"__EVENTVALIDATION\" value=\"/wEdAAPY8WOLfxUqyLuJ3FHb/SjAnexQA0tUWxhXiF1Lx87GyZtWKg6RvYaBd0w/zXbzv0kGEjkBDqvIvyotHL0vkx4VUQ8znNuDIUSiOL8nfXaIVw==\"
        />\r\n        \r\n        <script type=\"text/javascript\" src=\"../../HttpCombiner.ashx?s=IconJs&t=text/javascript\"></script>\r\n
        \       <script type=\"text/javascript\">\r\n            jGrowlPosition =
        \"top-right\";\r\n        </script>\r\n        \r\n\r\n<script type=\"text/javascript\">\r\n
        \   /*This script is designed to alert the user when session timout is reached
        and redirect to home page*/\r\n    var timer1;\r\n    window.clearTimeout(timer1);\r\n
        \   var $dialog;\r\n    $(document).ready(function()\r\n    {\r\n        $dialog
        = $('<div></div>').html('Your session has expired, you will now be redirected
        to the home page.').dialog(\r\n        {\r\n            buttons:\r\n            {
        \  \r\n                'Ok': function()\r\n                {\r\n                    $(this).dialog('close');\r\n
        \                   window.location = 'https://datracker.penrithcity.nsw.gov.au/track/Pages/XC.Home/Default.aspx';\r\n
        \               }\r\n            },\r\n            show: \"fade\",\r\n            hide:
        \"fade\",\r\n            resizable: false,\r\n            modal: true,\r\n
        \           autoOpen: false,\r\n            title:  'Session Expired'\r\n
        \       });\r\n    });\r\n    var sessionTimeout = '28799000';\r\n    function
        doTimeout()\r\n    {\r\n        $dialog.dialog('open');\r\n        return
        false;\r\n    }\r\n    timer1 = window.setTimeout('doTimeout()',sessionTimeout);\r\n</script>\r\n
        \       <div id=\"docc\">\r\n            <div id=\"hd\" role=\"banner\" class=\"yui3-u-1\">\r\n
        \            <div class=\"hdLogin\">\r\n                </div>\r\n              <div
        class=\"tabMenu\">\r\n                    <div tabindex=\"0\" id=\"ctl00_tab\"
        class=\"RadMenu RadMenu_Outlook rmSized\" style=\"margin-top:0px;\">\r\n\t<!--
        2021.2.511.40 --><ul class=\"rmRootGroup rmHorizontal\">\r\n\t\t<li class=\"rmItem
        rmFirst\"><a class=\"rmLink rmRootLink\" href=\"../xc.Home/Default.aspx\"><img
        alt=\"\" src=\"../../Common/Common/Image.aspx?rid=home.png\" class=\"rmLeftImage\"
        /><span class=\"rmText\">Home</span></a></li><li class=\"rmItem \"><a class=\"rmLink
        rmRootLink\" href=\"../XC.Plan/Default.aspx\"><img alt=\"\" src=\"../../Common/Common/Image.aspx?rid=map_magnify.png\"
        class=\"rmLeftImage\" /><span class=\"rmText\">Planning</span></a></li><li
        class=\"rmItem \"><a class=\"rmLink rmRootLink\" href=\"Default.aspx\"><img
        alt=\"\" src=\"../../Common/Common/Image.aspx?rid=page_key.png\" class=\"rmLeftImage\"
        /><span class=\"rmText\">Development</span></a></li><li class=\"rmItem \"><a
        class=\"rmLink rmRootLink\" href=\"../xc.Portal/Index.aspx\"><img alt=\"\"
        src=\"../../Common/Common/Image.aspx?rid=user-16.png\" class=\"rmLeftImage\"
        /><span class=\"rmText\">My Council</span></a></li><li class=\"rmItem rmLast\"><a
        class=\"rmLink rmRootLink\" href=\"../xc.Report/Index.aspx\"><img alt=\"\"
        src=\"../../Common/Common/Image.aspx?rid=table_multiple.png\" class=\"rmLeftImage\"
        /><span class=\"rmText\">Reports</span></a></li>\r\n\t</ul><input id=\"ctl00_tab_ClientState\"
        name=\"ctl00_tab_ClientState\" type=\"hidden\" />\r\n</div>\r\n                    \r\n
        \                   \r\n                </div>\r\n            </div>\r\n            <div
        id=\"bd\">\r\n                <div id=\"main\" class=\"yui3-g\">\r\n                    <div
        class=\"yui3-u-1-6\">\r\n                        <br />\r\n                        \r\n
        \   <div class=\"padded\" style=\"padding-left:20px;\">\r\n        <div class=\"Links
        LinksGroup\">\r\n  <div id=\"m0\" class=\"LinksTitle\" onclick=\"toggleMenu('0');\">\r\n
        \   <img src=\"../../Image/bullet_arrow_down.aspx\" alt=\"show\" id=\"g0\"
        style=\"float:left;\" />Application Search</div>\r\n  <div id=\"i0\" class=\"LinksSection\">\r\n
        \   <a href=\"../../Pages/XC.Track/SearchApplication.aspx\" class=\"Links\"
        target=\"\">Find an Application</a>\r\n  </div>\r\n</div>\r\n<div class=\"Links
        LinksGroup\">\r\n  <div id=\"m1\" class=\"LinksTitle\" onclick=\"toggleMenu('1');\">\r\n
        \   <img src=\"../../Image/bullet_arrow_down.aspx\" alt=\"show\" id=\"g1\"
        style=\"float:left;\" />Popular Searches</div>\r\n  <div id=\"i1\" class=\"LinksSection\">\r\n
        \   <a href=\"../../Pages/XC.Track/SearchApplication.aspx?d=thisweek&amp;k=LodgementDate&amp;t=DevApp\"
        class=\"Links\" target=\"\">DAs Received this Week</a>\r\n    <a href=\"../../Pages/XC.Track/SearchApplication.aspx?d=lastweek&amp;k=LodgementDate&amp;t=DevApp\"
        class=\"Links\" target=\"\">DAs Received last Week</a>\r\n    <a href=\"../../Pages/XC.Track/SearchApplication.aspx?d=thismonth&amp;k=LodgementDate&amp;t=DevApp\"
        class=\"Links\" target=\"\">DAs Received this Month</a>\r\n    <a href=\"../../Pages/XC.Track/SearchApplication.aspx?d=lastmonth&amp;k=LodgementDate&amp;t=DevApp\"
        class=\"Links\" target=\"\">DAs Received last Month</a>\r\n    <a href=\"../../Pages/XC.Track/SearchApplication.aspx?d=thisweek&amp;k=DeterminationDate&amp;t=DevApp\"
        class=\"Links\" target=\"\">DAs Determined this Week</a>\r\n    <a href=\"../../Pages/XC.Track/SearchApplication.aspx?d=lastweek&amp;k=DeterminationDate&amp;t=DevApp\"
        class=\"Links\" target=\"\">DAs Determined last Week</a>\r\n    <a href=\"../../Pages/XC.Track/SearchApplication.aspx?d=thismonth&amp;k=DeterminationDate&amp;t=DevApp\"
        class=\"Links\" target=\"\">DAs Determined this Month</a>\r\n    <a href=\"../../Pages/XC.Track/SearchApplication.aspx?d=lastmonth&amp;k=DeterminationDate&amp;t=DevApp\"
        class=\"Links\" target=\"\">DAs Determined last Month</a>\r\n  </div>\r\n</div>\r\n<script
        type=\"text/javascript\">\r\n\t\t\t\tif ($.cookie(\"menu_0\")==null) {$.cookie(\"menu_0\",'show',{expires:28,path:'/'});}\r\n\t\t\t\tif
        ($.cookie(\"menu_0\")=='hide') {$('#i0').hide();$('#g0').attr(\"src\", \"../../Image/bullet_arrow_right.aspx\");}\r\n\t\t\t\r\n\t\t\t\tif
        ($.cookie(\"menu_1\")==null) {$.cookie(\"menu_1\",'show',{expires:28,path:'/'});}\r\n\t\t\t\tif
        ($.cookie(\"menu_1\")=='hide') {$('#i1').hide();$('#g1').attr(\"src\", \"../../Image/bullet_arrow_right.aspx\");}\r\n\t\t\t\r\n\t\t\tfunction
        toggleMenu(id) {\r\n\t\t\tif ($.cookie('menu_' + id)=='hide') {\r\n\t\t\t$.cookie('menu_'
        + id,'show',{expires:28,path:'/'});\r\n\t\t\t$('#i' + id).slideDown('slow');\r\n\t\t\t$('#g'
        + id).attr(\"src\", \"../../Image/bullet_arrow_down.aspx\");\r\n\t\t\t} else
        {\r\n\t\t\t$.cookie('menu_' + id,'hide',{expires:28,path:'/'});\r\n\t\t\t$('#i'
        + id).slideUp('slow');\r\n\t\t\t$('#g' + id).attr(\"src\", \"../../Image/bullet_arrow_right.aspx\");\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t\t
        </script> \r\n\r\n<div class=\"Links LinksGroup\" style=\"display:none;\">\r\n
        \   <div id=\"mSub\" class=\"LinksTitle\" onclick=\"toggleMenu('Sub');\">\r\n
        \       <img src=\"../../Image/bullet_arrow_down.aspx\" alt=\"show\" id=\"gSub\"
        style=\"float:left;\" />Outstanding By Suburb\r\n    </div>\r\n    <div id=\"iSub\"
        class=\"LinksSection\">\r\n        \r\n    </div>\r\n</div>\r\n<script type=\"text/javascript\">\r\n
        \   if ($.cookie(\"menu_Sub\") == null) {\r\n        $.cookie(\"menu_Sub\",
        'hide', { expires: 28, path: '/' });\r\n    };\r\n    $(function () {\r\n
        \       if ($.cookie(\"menu_Sub\") === 'hide') {\r\n            $('#iSub').hide();\r\n
        \           $('#gSub').attr(\"src\", \"../../Image/bullet_arrow_right.aspx\");\r\n
        \       };\r\n    })\r\n</script>\r\n\r\n\r\n\r\n\r\n    </div>\r\n\r\n                    </div>\r\n
        \                   <div class=\"yui3-u-5-6\">\r\n                        <div
        class=\"main\">\r\n                            <div style=\"border-bottom:solid
        1px #000; margin-bottom:10px;\">\r\n                                You are
        here: <a href=\"http://datracker.penrithcity.nsw.gov.au/track\">Home</a> &#187;
        <a href=\"../../pages/xc.track/default.aspx\" class=\"breadcrumb\">Development</a>
        &#187; <a href=\"../../Pages/XC.Track/SearchApplication.aspx\">Find an Application</a>\r\n
        \                               \r\n                            </div>\r\n
        \                           <div>\r\n                                <div
        id=\"ctl00_rap\">\r\n\t\r\n                                        \r\n    <div
        class=\"padded\">\r\n        <div id=\"ctl00_ctMain_pnlMain\">\r\n\t\t\r\n
        \           \r\n<script type=\"text/javascript\">\r\n    $(document).ready(function(){\r\n
        \       $(\".application\").autocomplete({\r\n            delay:300,\r\n            minLength:1,\r\n\t\t
        \   source: function(request, response){\r\n                $.ajax({\r\n                    type:'POST',\r\n
        \                   url:'../../Common/Services/AutoComplete.aspx/GetAutoCompletePairList',\r\n
        \                   data: '{\"sql\":\"~/Pages/XC.Track/Sql/ApplicationSearchXService.sql\",\"conn\":\"'
        + 'Proclaim' + '\",\"term\":\"' + request.term + '\"}',\r\n                    contentType:
        \"application/json; charset=utf-8\",\r\n                    dataType: \"json\",\r\n
        \                   success: function (data) {\r\n                        data
        = data.d;\r\n                        response(data);\r\n                    }\r\n
        \               });},\r\n            select: function (event, ui){\r\n                $('#loading').show();\r\n
        \               $('.application').val(ui.item.label);\r\n                switch
        (ui.item.value.substr(0,3)) {\r\n                    case 'aid': window.location
        = 'SearchApplication.aspx?id=' + ui.item.value.substr(4); break;\r\n                    case
        'pid': window.location = 'SearchApplication.aspx?pid=' + ui.item.value.substr(4)
        + '&a=' + ui.item.label; break;\r\n                    default:window.location
        = 'SearchApplication.aspx';\r\n                }\r\n                return
        false;\r\n            },\r\n            focus: function (event, ui) {\r\n
        \               $('.application').val(ui.item.label);\r\n                return
        false;\r\n            }\r\n\t    });\r\n    });\r\n</script>\r\n\r\n<div id=\"ctl00_ctMain_search_pnlSearch\"
        class=\"MainPanel\">\r\n\t\t\t\r\n    <h2>Application Search</h2>\r\n    <input
        name=\"ctl00$ctMain$search$txtSearch\" type=\"text\" id=\"ctl00_ctMain_search_txtSearch\"
        class=\"application\" />\r\n    <input type=\"submit\" name=\"ctl00$ctMain$search$btnSearch\"
        value=\"Search\" id=\"ctl00_ctMain_search_btnSearch\" class=\"buttonText buttonModify\"
        />\r\n    <img id=\"loading\" src=\"../../Common/Common/Image.aspx?rid=loading03.gif\"
        alt=\"loading\" style=\"display:none;\" />\r\n    <br /><br />\r\n\r\n\t\t</div>\r\n\r\n<div>\r\n
        \   <br /><br /><br />\r\n    \r\n</div>\r\n\r\n\r\n\t\r\n\t</div>\r\n        <div
        id=\"ctl00_ctMain_d1\" class=\"shift\">\r\n            \r\n        </div>\r\n
        \   </div>    \r\n\r\n                                    \r\n</div>\r\n                                \r\n
        \                               <div id=\"ctl00_rlp\" style=\"display:none;\">\r\n\t\r\n
        \                                       <img alt=\"Loading...\" src=\"../../Common/Common/Image.aspx?rid=loading09.gif\"
        />\r\n                                    \r\n</div>\r\n                            </div>
        \ \r\n                            <br />\r\n                        </div>\r\n
        \                   </div>\r\n                </div>\r\n                <div
        id=\"ft\" class=\"yui3-u-1\">\r\n\t\t\t        <table width=\"966\">\r\n\t\t\t
        \           <tr>\r\n\t\t\t                <td>\r\n\t\t\t                    <p
        align=\"justify\">\r\n                                    DISCLAIMER: Penrith
        City Council will attempt, in good faith, to ensure that the information provided
        by this system in response to your enquiry is current and accurate. However,
        Penrith City Council cannot guarantee the accuracy, currency or completeness
        of the information provided. All information provided by this system is for
        information purposes only and no reliance should be placed on this information
        for any possible legal purpose or any circumstance where loss or damage could
        arise as a result of reliance on this information. Penrith City Council does
        not accept any responsibility or liability should you rely upon the information
        provided by this system to your detriment, except as provided by statute.
        Use of this system and the submission of information into it, implies agreement
        with and consent to the conditions. \r\n\t\t\t                    </p>\r\n\t\t\t
        \               </td>\r\n\t\t\t            </tr>\r\n\t\t\t        </table>\r\n\t\t\t
        \       <br />\r\n\t\t\t        <hr width=\"966px\"/>\r\n    \t\t\t    <div
        id=\"ctl00_help_pnlHelp\" class=\"Help\">\r\n\t&nbsp;<a id=\"ctl00_help_hlk1\"
        title=\"Printer-friendly page\" href=\"http://datracker.penrithcity.nsw.gov.au/track/Pages/XC.Track/SearchApplication.aspx?p=y\"
        target=\"_blank\"><img src=\"../../Common/Common/Image.aspx?rid=printer.png\"
        border=\"0\" alt=\"Print this page\"/></a>&nbsp;<a id=\"ctl00_help_hlk2\"
        title=\"Email a link to this page\" href=\"mailto:&amp;subject=ICON%20Software%20Solutions&amp;body=http://datracker.penrithcity.nsw.gov.au/track/Pages/XC.Track/SearchApplication.aspx\"><img
        src=\"../../Common/Common/Image.aspx?rid=email.png\" border=\"0\" alt=\"Email
        this page\"/></a>&nbsp; <div style=\"display:inline\"><div style=\"display:inline\"
        class=\"fb-like\" data-href=http://datracker.penrithcity.nsw.gov.au/track/Pages/XC.Track/SearchApplication.aspx
        data-send=\"false\" data-layout=\"button_count\" data-width=\"20\" data-show-faces=\"false\"></div></div><div
        style=\"display:inline\" class=\"g-plusone\" data-size=\"medium\"></div><div
        style=\"display:inline\"><a href=\"https://twitter.com/share?url=http://datracker.penrithcity.nsw.gov.au/track/Pages/XC.Track/SearchApplication.aspx\"
        class=\"twitter-share-button\" data-lang=\"en\">Tweet</a></div><div style=\"display:inline\"><script
        src=\"//platform.linkedin.com/in.js\" type=\"text/javascript\"></script><script
        type=\"IN/Share\" data-counter=\"right\"></script></div>\r\n</div>\r\n                    \r\n
        \                   Copyright &copy; 2010 Penrith City Council\r\n                    &nbsp;|&nbsp;\r\n
        \                   <a href=\"../../Common/Common/terms.aspx\">Terms and Conditions</a>\r\n
        \                   &nbsp;|&nbsp;\r\n                    Powered by <a href=\"http://www.iconsoftware.com.au\"
        target=\"_blank\">ICON Software Solutions</a>\r\n                </div>\r\n
        \           </div>\r\n        </div>\r\n        <script type=\"text/javascript\"
        src=\"../../Common/Javascript/final.js\"></script>\r\n        <script type=\"text/javascript\"
        src=\"../../Common/User/User.js\"></script> \r\n        <script type=\"text/javascript\">\r\n
        \           $(document).ready(function () {\r\n                document.title
        = document.title + ' - TechnologyOne';\r\n            });\r\n        </script>\r\n
        \   \r\n\r\n<script type=\"text/javascript\">\r\n//<![CDATA[\r\nwindow.__TsmHiddenField
        = $get('ctl00_script_TSM');;(function() {\r\n                        function
        loadHandler() {\r\n                            var hf = $get('ctl00_rcss_TSSM');\r\n
        \                           if (!hf._RSSM_init) { hf._RSSM_init = true; hf.value
        = ''; }\r\n                            hf.value += ';Telerik.Web.UI, Version=2021.2.511.40,
        Culture=neutral, PublicKeyToken=121fae78165ba3d4:en:495692de-a00b-4c49-bd24-ba26e736c57e:ed2942d4:53e1db5a;Telerik.Web.UI.Skins,
        Version=2021.2.511.40, Culture=neutral, PublicKeyToken=121fae78165ba3d4:en:74cc62f7-b6ac-48a5-97df-04d6b0ba4852:17af17ec:40a387cd';\r\n
        \                           Sys.Application.remove_load(loadHandler);\r\n
        \                       };\r\n                        Sys.Application.add_load(loadHandler);\r\n
        \                   })();Sys.Application.add_init(function() {\r\n    $create(Telerik.Web.UI.RadMenu,
        {\"_childListElementCssClass\":null,\"_skin\":\"Outlook\",\"attributes\":{},\"clientStateFieldID\":\"ctl00_tab_ClientState\",\"collapseAnimation\":\"{\\\"duration\\\":450}\",\"defaultGroupSettings\":\"{\\\"flow\\\":1}\",\"expandAnimation\":\"{\\\"duration\\\":450}\",\"itemData\":[{\"navigateUrl\":\"~/Pages/xc.Home/Default.aspx\"},{\"navigateUrl\":\"~/Pages/XC.Plan/Default.aspx\"},{\"navigateUrl\":\"~/Pages/XC.Track/Default.aspx\"},{\"navigateUrl\":\"~/Pages/xc.Portal/Index.aspx\"},{\"navigateUrl\":\"~/Pages/xc.Report/Index.aspx\"}]},
        null, null, $get(\"ctl00_tab\"));\r\n});\r\n//]]>\r\n</script>\r\n</form>\r\n</body>\r\n</html>"
  recorded_at: Tue, 14 May 2019 14:00:00 GMT
- request:
    method: get
    uri: https://datracker.penrithcity.nsw.gov.au/track/Pages/XC.Track/SearchApplication.aspx?d=last28days&k=LodgementDate&o=xml&t=DA,DevApp
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.7 Ruby/2.5.1p57 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - ASP.NET_SessionId=ngkigqfjkubryvlodwwpurvv
      Host:
      - datracker.penrithcity.nsw.gov.au
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Type:
      - application/xml; charset=utf-8
      X-Ua-Compatible:
      - IE=8
      X-Frame-Options:
      - SAMEORIGIN
      Date:
      - Thu, 14 Jul 2022 01:47:36 GMT
      Content-Length:
      - '430088'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 14 May 2019 14:00:00 GMT
recorded_with: VCR 6.0.0
